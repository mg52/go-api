basePath: /
definitions:
  domain.Authentication:
    properties:
      token:
        type: string
    type: object
  domain.Login:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  domain.User:
    properties:
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Input
        in: body
        name: authLogin
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Authentication'
      summary: Login
      tags:
      - login
  /user:
    get:
      consumes:
      - application/json
      description: User List
      operationId: auth-login
      parameters:
      - description: Token with the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
      summary: User List
      tags:
      - user
    post:
      consumes:
      - application/json
      description: User Create
      parameters:
      - description: Token with the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Input
        in: body
        name: authLogin
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
      summary: User Create
      tags:
      - user
swagger: "2.0"
